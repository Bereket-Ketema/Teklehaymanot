function registration(app,db){
    app.post('/register', (req, res) => {
  const {
    ·àµ·àù, ·ã®·ä†·â£·âµ_·àµ·àù, ·ã®·ä†·ã´·âµ_·àµ·àù, ·ã®·ä•·äì·âµ_·àµ·àù, ·ã®·ä≠·à≠·àµ·âµ·äì_·àµ·àù,
    ·ã®·â£·àà·â§·âµ_·àµ·àù, ·àç·åÜ·âΩ_·â•·ãõ·âµ, ·çÜ·â≥, ·ã®·âµ·ãç·àç·ãµ_·âÄ·äï, ·ä•·ãµ·àú,
    ·äï·à∞·àÉ_·ä†·àé·âµ, ·äï·à∞·àÉ_·ä†·â£·âµ, ·ã®·â§·âµ_·âÅ·å•·à≠, ·ã®·äñ·à®·ãç_·ãò·àò·äï,
    ·âÄ·å†·äì, ·àµ·àç·ä≠_·âÅ·å•·à≠, ·ä¢·àú·ã≠·àç, ·ã®·âµ·àù·àÖ·à≠·âµ_·ã∞·à®·åÉ,
    ·àô·ã´, ·ã®·àõ·àµ·åà·â£·âµ_·âÄ·äï, ·çä·à≠·àõ
  } = req.body;

  // Check if person already exists by name, father's name, and phone
  const checkSql = 'SELECT * FROM ·àù·ãï·àò·äì·äï WHERE ·àµ·àù = ? AND ·ã®·ä†·â£·âµ_·àµ·àù = ? AND ·àµ·àç·ä≠_·âÅ·å•·à≠ = ?';
  db.query(checkSql, [·àµ·àù, ·ã®·ä†·â£·âµ_·àµ·àù, ·àµ·àç·ä≠_·âÅ·å•·à≠], (err, existing) => {
    if (err) return res.status(500).send('üò¢ ·àµ·àÖ·â∞·âµ ·â∞·çà·å•·àØ·àç');

    if (existing.length > 0) {
      return res.send('‚ùå ·ä•·äê·ãö·àÖ ·àò·à®·åÉ·ãé·âΩ ·ä†·àµ·âÄ·ãµ·àû ·â∞·àò·ãù·åç·â†·ãã·àç·ç¢');
    }

    // If not exists, insert the person
    const insertSql = `
      INSERT INTO ·àù·ãï·àò·äì·äï (
        ·àµ·àù, ·ã®·ä†·â£·âµ_·àµ·àù, ·ã®·ä†·ã´·âµ_·àµ·àù, ·ã®·ä•·äì·âµ_·àµ·àù, ·ã®·ä≠·à≠·àµ·âµ·äì_·àµ·àù,
        ·ã®·â£·àà·â§·âµ_·àµ·àù, ·àç·åÜ·âΩ_·â•·ãõ·âµ, ·çÜ·â≥, ·ã®·âµ·ãç·àç·ãµ_·âÄ·äï, ·ä•·ãµ·àú,
        ·äï·à∞·àÉ_·ä†·àé·âµ, ·äï·à∞·àÉ_·ä†·â£·âµ, ·ã®·â§·âµ_·âÅ·å•·à≠, ·ã®·äñ·à®·ãç_·ãò·àò·äï,
        ·âÄ·å†·äì, ·àµ·àç·ä≠_·âÅ·å•·à≠, ·ä¢·àú·ã≠·àç, ·ã®·âµ·àù·àÖ·à≠·âµ_·ã∞·à®·åÉ,
        ·àô·ã´, ·ã®·àõ·àµ·åà·â£·âµ_·âÄ·äï, ·çä·à≠·àõ,·àÅ·äî·â≥
      )
      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)
    `;

    const ·àÅ·äî·â≥ = '·â†·â§·â∞·ä≠·à≠·àµ·â≤·ã´·äï ·ãç·àµ·å•';

    db.query(insertSql, [
      ·àµ·àù, ·ã®·ä†·â£·âµ_·àµ·àù, ·ã®·ä†·ã´·âµ_·àµ·àù, ·ã®·ä•·äì·âµ_·àµ·àù, ·ã®·ä≠·à≠·àµ·âµ·äì_·àµ·àù,
      ·ã®·â£·àà·â§·âµ_·àµ·àù, ·àç·åÜ·âΩ_·â•·ãõ·âµ, ·çÜ·â≥, ·ã®·âµ·ãç·àç·ãµ_·âÄ·äï, ·ä•·ãµ·àú,
      ·äï·à∞·àÉ_·ä†·àé·âµ, ·äï·à∞·àÉ_·ä†·â£·âµ, ·ã®·â§·âµ_·âÅ·å•·à≠, ·ã®·äñ·à®·ãç_·ãò·àò·äï,
      ·âÄ·å†·äì, ·àµ·àç·ä≠_·âÅ·å•·à≠, ·ä¢·àú·ã≠·àç, ·ã®·âµ·àù·àÖ·à≠·âµ_·ã∞·à®·åÉ,
      ·àô·ã´, ·ã®·àõ·àµ·åà·â£·âµ_·âÄ·äï, ·çä·à≠·àõ,·àÅ·äî·â≥
    ], (err, result) => {
      if (err) {
        console.error(err);
        return res.status(500).send("üò¢ ·àò·àò·ãù·åà·â• ·ä†·àç·â∞·à≥·ä´·àù·ç¢");
      }

      res.send('üéâ ·â∞·àò·ãù·åç·âß·àç ·â†·â∞·à≥·ä´ ·àÅ·äî·â≥!');
    });
  });
});
}

function registrationor(app,db){
    app.post('/registeror', (req, res) => {
  const {
    ·àµ·àù, ·ã®·ä†·â£·âµ_·àµ·àù, ·ã®·ä†·ã´·âµ_·àµ·àù, ·ã®·ä•·äì·âµ_·àµ·àù, ·ã®·ä≠·à≠·àµ·âµ·äì_·àµ·àù,
    ·ã®·â£·àà·â§·âµ_·àµ·àù, ·àç·åÜ·âΩ_·â•·ãõ·âµ, ·çÜ·â≥, ·ã®·âµ·ãç·àç·ãµ_·âÄ·äï, ·ä•·ãµ·àú,
    ·äï·à∞·àÉ_·ä†·àé·âµ, ·äï·à∞·àÉ_·ä†·â£·âµ, ·ã®·â§·âµ_·âÅ·å•·à≠, ·ã®·äñ·à®·ãç_·ãò·àò·äï,
    ·âÄ·å†·äì, ·àµ·àç·ä≠_·âÅ·å•·à≠, ·ä¢·àú·ã≠·àç, ·ã®·âµ·àù·àÖ·à≠·âµ_·ã∞·à®·åÉ,
    ·àô·ã´, ·ã®·àõ·àµ·åà·â£·âµ_·âÄ·äï, ·çä·à≠·àõ
  } = req.body;

  // Check if person already exists by name, father's name, and phone
  const checkSql = 'SELECT * FROM ·àù·ãï·àò·äì·äï WHERE ·àµ·àù = ? AND ·ã®·ä†·â£·âµ_·àµ·àù = ? AND ·àµ·àç·ä≠_·âÅ·å•·à≠ = ?';
  db.query(checkSql, [·àµ·àù, ·ã®·ä†·â£·âµ_·àµ·àù, ·àµ·àç·ä≠_·âÅ·å•·à≠], (err, existing) => {
    if (err) return res.status(500).send('üò¢ ·àµ·àÖ·â∞·âµ ·â∞·çà·å•·àØ·àç');

    if (existing.length > 0) {
      return res.send('‚ùå ·ä•·äê·ãö·àÖ ·àò·à®·åÉ·ãé·âΩ ·ä†·àµ·âÄ·ãµ·àû ·â∞·àò·ãù·åç·â†·ãã·àç·ç¢');
    }

    // If not exists, insert the person
    const insertSql = `
      INSERT INTO ·àù·ãï·àò·äì·äï (
        ·àµ·àù, ·ã®·ä†·â£·âµ_·àµ·àù, ·ã®·ä†·ã´·âµ_·àµ·àù, ·ã®·ä•·äì·âµ_·àµ·àù, ·ã®·ä≠·à≠·àµ·âµ·äì_·àµ·àù,
        ·ã®·â£·àà·â§·âµ_·àµ·àù, ·àç·åÜ·âΩ_·â•·ãõ·âµ, ·çÜ·â≥, ·ã®·âµ·ãç·àç·ãµ_·âÄ·äï, ·ä•·ãµ·àú,
        ·äï·à∞·àÉ_·ä†·àé·âµ, ·äï·à∞·àÉ_·ä†·â£·âµ, ·ã®·â§·âµ_·âÅ·å•·à≠, ·ã®·äñ·à®·ãç_·ãò·àò·äï,
        ·âÄ·å†·äì, ·àµ·àç·ä≠_·âÅ·å•·à≠, ·ä¢·àú·ã≠·àç, ·ã®·âµ·àù·àÖ·à≠·âµ_·ã∞·à®·åÉ,
        ·àô·ã´, ·ã®·àõ·àµ·åà·â£·âµ_·âÄ·äï, ·çä·à≠·àõ,·àÅ·äî·â≥
      )
      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `;

    const ·àÅ·äî·â≥ = '·â†·â§·â∞·ä≠·à≠·àµ·â≤·ã´·äï ·ãç·àµ·å•';

    db.query(insertSql, [
      ·àµ·àù, ·ã®·ä†·â£·âµ_·àµ·àù, ·ã®·ä†·ã´·âµ_·àµ·àù, ·ã®·ä•·äì·âµ_·àµ·àù, ·ã®·ä≠·à≠·àµ·âµ·äì_·àµ·àù,
      ·ã®·â£·àà·â§·âµ_·àµ·àù, ·àç·åÜ·âΩ_·â•·ãõ·âµ, ·çÜ·â≥, ·ã®·âµ·ãç·àç·ãµ_·âÄ·äï, ·ä•·ãµ·àú,
      ·äï·à∞·àÉ_·ä†·àé·âµ, ·äï·à∞·àÉ_·ä†·â£·âµ, ·ã®·â§·âµ_·âÅ·å•·à≠, ·ã®·äñ·à®·ãç_·ãò·àò·äï,
      ·âÄ·å†·äì, ·àµ·àç·ä≠_·âÅ·å•·à≠, ·ä¢·àú·ã≠·àç, ·ã®·âµ·àù·àÖ·à≠·âµ_·ã∞·à®·åÉ,
      ·àô·ã´, ·ã®·àõ·àµ·åà·â£·âµ_·âÄ·äï, ·çä·à≠·àõ,·àÅ·äî·â≥,
    ], (err, result) => {
      if (err) {
        console.error(err);
        return res.status(500).send("üò¢ Galmeen hin milkoofne");
      }

      res.send('üéâ Galmeen milkaa‚Äôinaan xumurameera!');
    });
  });
});
}

function registrationChild(app,db){
  app.post('/child', (req, res) => {
  const children = req.body.children;

  if (!Array.isArray(children) || children.length === 0) {
    return res.status(400).send("‚ùå ·àù·äï·àù ·àò·à®·åÉ ·ä†·àç·â∞·àã·ä®·àù·ç¢");
  }

  const inserted = [];
  const skipped = [];

  // Loop through each child
  const processChild = (index) => {
    if (index >= children.length) {
      return res.send(
        `‚úÖ ${inserted.length} ·àç·åÜ·âΩ ·â∞·àò·ãù·åç·â†·ãã·àç·ç¢\n‚ùå ${skipped.length} ·ãµ·åã·àö ·àò·à®·åÉ ·àù·ä≠·äï·ã´·âµ ·àù·ä≠·äï·ã´·âµ ·ä†·àç·â∞·àò·ãò·åà·â°·àù·ç¢`
      );
    }

    const child = children[index];
    const checkSql = `
      SELECT * FROM ·àç·åÜ·âΩ
      WHERE ·àµ·àù = ? AND ·ã®·ä†·â£·âµ_·àµ·àù = ? AND ·àµ·àç·ä≠_·âÅ·å•·à≠ = ?
    `;
    const checkParams = [
      child['·àµ·àù'],
      child['·ã®·ä†·â£·âµ_·àµ·àù'],
      child['·àµ·àç·ä≠_·âÅ·å•·à≠'],
    ];

    db.query(checkSql, checkParams, (err, results) => {
      if (err) {
        console.error("‚ùå ·àµ·àÖ·â∞·âµ ·â†·àò·çà·â∞·àΩ ·åä·ãú:", err);
        return res.status(500).send("üò¢ ·ãç·àµ·å• ·àµ·àÖ·â∞·âµ ·äê·â†·à≠·ç¢");
      }

      if (results.length > 0) {
        skipped.push(child);
        processChild(index + 1); // Move to next
      } else {
        const insertSql = `
          INSERT INTO ·àç·åÜ·âΩ (
            ·àµ·àù, ·ã®·ä†·â£·âµ_·àµ·àù, ·ã®·ä†·ã´·âµ_·àµ·àù, ·ã®·ä•·äì·âµ_·àµ·àù, ·ã®·ä≠·à≠·àµ·âµ·äì_·àµ·àù,
            ·çÜ·â≥, ·ã®·âµ·ãç·àç·ãµ_·âÄ·äï, ·ä•·ãµ·àú,
            ·àµ·àç·ä≠_·âÅ·å•·à≠, ·ã®·àõ·àµ·åà·â£·âµ_·âÄ·äï, ·çä·à≠·àõ
          )
          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        `;
        const values = [
          child['·àµ·àù'], child['·ã®·ä†·â£·âµ_·àµ·àù'], child['·ã®·ä†·ã´·âµ_·àµ·àù'],
          child['·ã®·ä•·äì·âµ_·àµ·àù'], child['·ã®·ä≠·à≠·àµ·âµ·äì_·àµ·àù'], child['·çÜ·â≥'],
          child['·ã®·âµ·ãç·àç·ãµ_·âÄ·äï'], child['·ä•·ãµ·àú'], child['·àµ·àç·ä≠_·âÅ·å•·à≠'],
          child['·ã®·àõ·àµ·åà·â£·âµ_·âÄ·äï'], child['·çä·à≠·àõ']
        ];

        db.query(insertSql, values, (err, result) => {
          if (err) {
            console.error("‚ùå ·àõ·àµ·åà·â£·âµ ·àã·ã≠ ·àµ·àÖ·â∞·âµ:", err);
            skipped.push(child); // Treat as failed
          } else {
            inserted.push(child);
          }
          processChild(index + 1); // Continue
        });
      }
    });
  };

  // Start processing
  processChild(0);
});

}



function registrationChildor(app,db){
  app.post('/childor', (req, res) => {
  const children = req.body.children;

  if (!Array.isArray(children) || children.length === 0) {
    return res.status(400).send("‚ùå Galmeen hin ergamne·ç¢");
  }

  const inserted = [];
  const skipped = [];

  // Loop through each child
  const processChild = (index) => {
    if (index >= children.length) {
      return res.send(
        `‚úÖ Ijollen ${inserted.length} Galmaa'aan·ç¢\n‚ùå ${skipped.length} Sababa Galme irra debi'itin hin galmoofne·ç¢`
      );
    }

    const child = children[index];
    const checkSql = `
      SELECT * FROM ·àç·åÜ·âΩ
      WHERE ·àµ·àù = ? AND ·ã®·ä†·â£·âµ_·àµ·àù = ? AND ·àµ·àç·ä≠_·âÅ·å•·à≠ = ?
    `;
    const checkParams = [
      child['·àµ·àù'],
      child['·ã®·ä†·â£·âµ_·àµ·àù'],
      child['·àµ·àç·ä≠_·âÅ·å•·à≠'],
    ];

    db.query(checkSql, checkParams, (err, results) => {
      if (err) {
        console.error("‚ùå ·àµ·àÖ·â∞·âµ ·â†·àò·çà·â∞·àΩ ·åä·ãú:", err);
        return res.status(500).send("üò¢ ·ãç·àµ·å• ·àµ·àÖ·â∞·âµ ·äê·â†·à≠·ç¢");
      }

      if (results.length > 0) {
        skipped.push(child);
        processChild(index + 1); // Move to next
      } else {
        const insertSql = `
          INSERT INTO ·àç·åÜ·âΩ (
            ·àµ·àù, ·ã®·ä†·â£·âµ_·àµ·àù, ·ã®·ä†·ã´·âµ_·àµ·àù, ·ã®·ä•·äì·âµ_·àµ·àù, ·ã®·ä≠·à≠·àµ·âµ·äì_·àµ·àù,
            ·çÜ·â≥, ·ã®·âµ·ãç·àç·ãµ_·âÄ·äï, ·ä•·ãµ·àú,
            ·àµ·àç·ä≠_·âÅ·å•·à≠, ·ã®·àõ·àµ·åà·â£·âµ_·âÄ·äï, ·çä·à≠·àõ
          )
          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        `;
        const values = [
          child['·àµ·àù'], child['·ã®·ä†·â£·âµ_·àµ·àù'], child['·ã®·ä†·ã´·âµ_·àµ·àù'],
          child['·ã®·ä•·äì·âµ_·àµ·àù'], child['·ã®·ä≠·à≠·àµ·âµ·äì_·àµ·àù'], child['·çÜ·â≥'],
          child['·ã®·âµ·ãç·àç·ãµ_·âÄ·äï'], child['·ä•·ãµ·àú'], child['·àµ·àç·ä≠_·âÅ·å•·à≠'],
          child['·ã®·àõ·àµ·åà·â£·âµ_·âÄ·äï'], child['·çä·à≠·àõ']
        ];

        db.query(insertSql, values, (err, result) => {
          if (err) {
            console.error("‚ùå Galchu irratti rakkon umameraa:", err);
            skipped.push(child); // Treat as failed
          } else {
            inserted.push(child);
          }
          processChild(index + 1); // Continue
        });
      }
    });
  };

  // Start processing
  processChild(0);
});

}


module.exports={registration,registrationor,registrationChild,registrationChildor};